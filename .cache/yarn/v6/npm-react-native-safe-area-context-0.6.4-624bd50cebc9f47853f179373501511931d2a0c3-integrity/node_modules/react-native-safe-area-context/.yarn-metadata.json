{
  "manifest": {
    "name": "react-native-safe-area-context",
    "version": "0.6.4",
    "description": "A flexible way to handle safe area, also works on Android and web.",
    "main": "lib/commonjs/index.js",
    "module": "lib/module/index.js",
    "react-native": "src/index.tsx",
    "types": "lib/typescript/src/index.d.ts",
    "sideEffects": false,
    "files": [
      "/src",
      "/lib",
      "/android",
      "/ios",
      "/*.podspec"
    ],
    "author": {
      "name": "Janic Duplessis",
      "email": "janicduplessis@gmail.com"
    },
    "contributors": [
      {
        "name": "Evan Bacon",
        "email": "bacon@expo.io",
        "url": "https://github.com/evanbacon"
      }
    ],
    "homepage": "https://github.com/th3rdwave/react-native-safe-area-context#readme",
    "license": "MIT",
    "scripts": {
      "start": "react-native start",
      "test": "yarn validate:prettier && yarn validate:eslint && yarn validate:typescript",
      "validate:eslint": "eslint \"src/**/*.{js,ts,tsx}\" \"example/**/*.{js,ts,tsx}\"",
      "validate:typescript": "tsc --project ./ --noEmit",
      "validate:prettier": "prettier \"src/**/*.{js,ts,tsx}\" \"example/**/*.{js,ts,tsx}\" --check",
      "validate:jest": "jest",
      "prepare": "bob build"
    },
    "keywords": [
      "react-native",
      "react native",
      "react-native-web",
      "expo-web",
      "safe area",
      "view"
    ],
    "peerDependencies": {
      "react": "*",
      "react-native": "*"
    },
    "dependencies": {},
    "devDependencies": {
      "@react-native-community/bob": "^0.7.0",
      "@react-native-community/eslint-config": "^0.0.5",
      "@types/jest": "^24.0.21",
      "@types/react": "^16.9.11",
      "@types/react-native": "^0.60.22",
      "@types/react-test-renderer": "^16.9.1",
      "@typescript-eslint/eslint-plugin": "^2.6.0",
      "@typescript-eslint/parser": "^2.6.0",
      "eslint": "6.6.0",
      "eslint-config-prettier": "^6.5.0",
      "eslint-plugin-prettier": "3.1.1",
      "expo": "^35.0.0",
      "jest": "^24.9.0",
      "metro-react-native-babel-preset": "^0.57.0",
      "prettier": "^1.18.2",
      "react": "^16.11.0",
      "react-dom": "^16.11.0",
      "react-native": "^0.61.0",
      "react-native-web": "^0.11.7",
      "react-test-renderer": "^16.11.0",
      "typescript": "^3.6.4"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/th3rdwave/react-native-safe-area-context.git"
    },
    "jest": {
      "preset": "react-native",
      "testEnvironment": "node",
      "clearMocks": true,
      "modulePathIgnorePatterns": [
        "<rootDir>/lib/"
      ]
    },
    "@react-native-community/bob": {
      "source": "src",
      "output": "lib",
      "targets": [
        "commonjs",
        "module",
        "typescript"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-react-native-safe-area-context-0.6.4-624bd50cebc9f47853f179373501511931d2a0c3-integrity/node_modules/react-native-safe-area-context/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-native-safe-area-context\n\n[![npm](https://img.shields.io/npm/v/react-native-safe-area-context)](https://www.npmjs.com/package/react-native-safe-area-context) [![Actions Status](https://6t2fa745na.execute-api.us-west-2.amazonaws.com/production/badge/th3rdwave/react-native-safe-area-context)](https://6t2fa745na.execute-api.us-west-2.amazonaws.com/production/results/th3rdwave/react-native-safe-area-context) ![Supports Android, iOS and web](https://img.shields.io/badge/platforms-android%20%7C%20ios%20%7C%20web-lightgrey.svg) ![MIT License](https://img.shields.io/npm/l/react-native-safe-area-context.svg)\n\nA flexible way to handle safe area, also works on Android and Web!\n\n## Getting started\n\nInstall the library using either Yarn:\n\n```\nyarn add react-native-safe-area-context\n```\n\nor npm:\n\n```\nnpm install --save react-native-safe-area-context\n```\n\nYou then need to link the native parts of the library for the platforms you are using. The easiest way to link the library is using the CLI tool by running this command from the root of your project:\n\n```\nreact-native link react-native-safe-area-context\n```\n\nIf you can't or don't want to use the CLI tool, you can also manually link the library using the instructions below (click on the arrow to show them):\n\n<details>\n<summary>Manually link the library on iOS</summary>\n\nEither follow the [instructions in the React Native documentation](https://facebook.github.io/react-native/docs/linking-libraries-ios#manual-linking) to manually link the framework or link using [Cocoapods](https://cocoapods.org) by adding this to your `Podfile`:\n\n```ruby\npod 'react-native-safe-area-context', :path => '../node_modules/react-native-safe-area-context'\n```\n\n</details>\n\n<details>\n<summary>Manually link the library on Android</summary>\n\nMake the following changes:\n\n#### `android/settings.gradle`\n```groovy\ninclude ':react-native-safe-area-context'\nproject(':react-native-safe-area-context').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-safe-area-context/android')\n```\n\n#### `android/app/build.gradle`\n```groovy\ndependencies {\n   ...\n   implementation project(':react-native-safe-area-context')\n}\n```\n\n#### `android/app/src/main/.../MainApplication.java`\nOn top, where imports are:\n\n```java\nimport com.th3rdwave.safeareacontext.SafeAreaContextPackage;\n```\n\nAdd the `SafeAreaContextPackage` class to your list of exported packages.\n\n```java\n@Override\nprotected List<ReactPackage> getPackages() {\n    return Arrays.asList(\n            new MainReactPackage(),\n            new SafeAreaContextPackage()\n    );\n}\n```\n</details>\n\n## Usage\n\nAdd `SafeAreaProvider` in your app root component:\n\n```js\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nfunction App() {\n  return (\n    <SafeAreaProvider>\n      ...\n    </SafeAreaProvider>\n  );\n}\n```\n\nUsage with hooks api:\n\n```js\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nfunction HookComponent() {\n  const insets = useSafeArea();\n\n  return <View style={{ paddingTop: insets.top }} />;\n}\n```\n\nUsage with consumer api:\n\n```js\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\n\nclass ClassComponent extends React.Component {\n  render() {\n    return (\n      <SafeAreaConsumer>\n        {insets => <View style={{ paddingTop: insets.top }} />}\n      </SafeAreaConsumer>\n    );\n  }\n}\n```\n\nUsage with `SafeAreaView`:\n\n```js\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nfunction SomeComponent() {\n  return (\n    <SafeAreaView>\n      <View />\n    </SafeAreaView>\n  );\n}\n```\n\n### Web SSR\n\nIf you are doing server side rendering on the web you can use `initialSafeAreaInsets` to inject insets value based on the device the user has, or simply pass zero values. Since insets measurement is async it will break rendering your page content otherwise.\n\n## Resources\n\n- Great article about how this library can be used: https://dev.to/brunolemos/adding-notch-support-to-your-react-native-android-app-3ci3\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Th3rd Wave\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-native-safe-area-context/-/react-native-safe-area-context-0.6.4.tgz#624bd50cebc9f47853f179373501511931d2a0c3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-native-safe-area-context/-/react-native-safe-area-context-0.6.4.tgz",
    "hash": "624bd50cebc9f47853f179373501511931d2a0c3",
    "integrity": "sha512-xj8Mv8ZHfc8RquBgVYt+4+nOJaexTblLsQJpyx4Dh4qFUG+3QtbNlfOF7/ITj/qY5LNdlfafKoDsVgFz0WIU1w==",
    "registry": "npm",
    "packageName": "react-native-safe-area-context",
    "cacheIntegrity": "sha512-xj8Mv8ZHfc8RquBgVYt+4+nOJaexTblLsQJpyx4Dh4qFUG+3QtbNlfOF7/ITj/qY5LNdlfafKoDsVgFz0WIU1w== sha1-YkvVDOvJ9HhT8Xk3NQFRGTHSoMM="
  },
  "registry": "npm",
  "hash": "624bd50cebc9f47853f179373501511931d2a0c3"
}