{
  "manifest": {
    "name": "react-native-multiple-select",
    "version": "0.2.9",
    "description": "Simple multi-select component for react-native",
    "main": "index.js",
    "scripts": {
      "test": "jest",
      "lint": "eslint lib/"
    },
    "jest": {
      "preset": "jest-react-native"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/toystars/react-native-multiple-select.git"
    },
    "keywords": [
      "reactnative",
      "multiselect",
      "multi-select",
      "react-native"
    ],
    "author": {
      "name": "Mustapha Babatunde Oluwaleke"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/toystars/react-native-multiple-select/issues"
    },
    "homepage": "https://github.com/toystars/react-native-multiple-select#readme",
    "dependencies": {},
    "devDependencies": {
      "babel-eslint": "^7.1.1",
      "babel-jest": "^18.0.0",
      "babel-preset-react-native": "^1.9.1",
      "eslint": "^3.15.0",
      "eslint-config-airbnb": "^14.1.0",
      "eslint-plugin-import": "^2.2.0",
      "eslint-plugin-jsx-a11y": "^4.0.0",
      "eslint-plugin-react": "^6.9.0",
      "jest": "^18.1.0",
      "jest-react-native": "^18.0.0",
      "react-test-renderer": "^15.4.2",
      "remote-redux-devtools": "^0.5.7"
    },
    "peerDependencies": {
      "lodash": "^4.17.4",
      "prop-types": "^15.5.10",
      "react": "16.0.0-alpha.6",
      "react-native": "^0.44.0",
      "react-native-vector-icons": "^4.1.1"
    },
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-react-native-multiple-select-0.2.9-1f257838182c454e5d69c46fe082100b0db78615-integrity/node_modules/react-native-multiple-select/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-native-multiple-select\n\n[![npm](https://img.shields.io/npm/v/react-native-multiple-select.svg)](https://www.npmjs.com/package/react-native-multiple-select) [![Downloads](https://img.shields.io/npm/dt/react-native-multiple-select.svg)](https://www.npmjs.com/package/react-native-multiple-select) [![Licence](https://img.shields.io/npm/l/react-native-multiple-select.svg)](https://www.npmjs.com/package/react-native-multiple-select)\n\n> Simple multi-select component for react-native (Select2 for react-native).\n\n![multiple](https://user-images.githubusercontent.com/16062709/30819847-0907dd1e-a218-11e7-9980-e70b2d8e7953.gif)  ![single](https://user-images.githubusercontent.com/16062709/30819849-095d6144-a218-11e7-85b9-4e2b96f9ead9.gif)\n\n\n\n## Installation\n\n``` bash\n$ npm install react-native-multiple-select --save\n```\nor use yarn\n\n``` bash\n$ yarn add react-native-multiple-select\n```\n\n\n## Usage\nNote: Ensure to add and configure [react-native-vector-icons](https://github.com/oblador/react-native-vector-icons) to your project before using this package.\n\nYou can clone and try out the [sample](https://github.com/toystars/RN-multiple-select-sample) app.\n\nThe snippet below shows how the component can be used\n\n\n```javascript\n// import component\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\nimport MultiSelect from 'react-native-multiple-select';\n \nlet \n\nclass MultiSelectExample extends Component {\n\n  this.state = {\n    selectedItems = [];\n  };\n\n  this.items = [{\n    id: '92iijs7yta',\n    name: 'Ondo',\n  }, {\n    id: 'a0s0a8ssbsd',\n    name: 'Ogun',\n  }, {\n    id: '16hbajsabsd',\n    name: 'Calabar',\n  }, {\n    id: 'nahs75a5sg',\n    name: 'Lagos',\n  }, {\n    id: '667atsas',\n    name: 'Maiduguri',\n  }, {\n    id: 'hsyasajs',\n    name: 'Anambra',\n  }, {\n    id: 'djsjudksjd',\n    name: 'Benue',\n  }, {\n    id: 'sdhyaysdj',\n    name: 'Kaduna',\n  }, {\n    id: 'suudydjsjd',\n    name: 'Abuja',\n  }];\n\n  onSelectedItemsChange = selectedItems => {\n    this.setState({ selectedItems });\n  };\n\n  render() {\n    const { selectedItems } = this.state;\n    return (\n      <View style={{ flex: 1 }}>\n        <MultiSelect\n          hideTags\n          items={items}\n          uniqueKey=\"id\"\n          ref={(component) => { this.multiSelect = component }}\n          onSelectedItemsChange={this.onSelectedItemsChange}\n          selectedItems={selectedItems}\n          selectText=\"Pick Items\"\n          searchInputPlaceholderText=\"Search Items...\"\n          altFontFamily=\"ProximaNova-Light\"\n          tagRemoveIconColor=\"#CCC\"\n          tagBorderColor=\"#CCC\"\n          tagTextColor=\"#CCC\"\n          selectedItemTextColor=\"#CCC\"\n          selectedItemIconColor=\"#CCC\"\n          itemTextColor=\"#000\"\n          searchInputStyle={{ color: '#CCC' }}\n          submitButtonColor=\"#CCC\"\n          submitButtonText=\"Submit\"\n        />\n        <View>\n          {this.multiSelect.getSelectedItemsExt(selectedItems)}\n        </View>\n      </View>\n    );\n  }\n}\n    \n```\n\nThe component takes 3 compulsory props - `items`, `uniqueKey` and `selectedItemsChange`. Other props are optional. The table below explains more.\n\n\n## Props\n\n| Prop        | Required   | Purpose  |\n| ------------- |-------------| -----|\n| items      | Yes | (Array, control prop) List of items to display in the multi-select component. JavaScript Array of objects. Each object must contain a name and unique identifier (Check sample above) |\n|selectedItems | No      | (Array, control prop) List of selected items keys . JavaScript Array of strings, that can be instantiated with the component |\n| uniqueKey      | Yes      | (String) Unique identifier that is part of each item's properties. Used internally as means of identifying each item (Check sample below) |\n| textColor | No     | (String) Color for selected item name displayed as label for multiselect  |\n| fontSize | No     | (Number) Font size for selected item name displayed as label for multiselect |\n| fixedHeight | No     | (Boolean) Defaults to false. Specifies if select dropdown take height of content or a fixed height with a scrollBar (There is an issue with this behavior when component is nested in a ScrollView in which scroll event will only be dispatched to parent ScrollView and select component won't be scrollable). See [this issue](https://github.com/toystars/react-native-multiple-select/issues/12) for more info. |\n| single | No     | (Boolean) Toggles select component between single option and multi option |\n| onSelectedItemsChange | Yes      | (Function) JavaScript function passed in as an argument. The function is to be defined with an argument (selectedItems). Triggered when `Submit` button is clicked (for multi select) or item is clicked (for single select). (Check sample above) |\n| selectText | No     | (String) Text displayed in main component |\n| searchInputPlaceholderText | No      | (String) Placeholder text displayed in multi-select filter input |\n| fontFamily | No     | (String) Custom font family to be used in component (affects all text except `searchInputPlaceholderText` described above) |\n| altFontFamily | No      | (String) Font family for `searchInputPlaceholderText` |\n| tagRemoveIconColor | No      | (String) Color to be used for the remove icon in selected items list |\n| tagBorderColor | No      | (String) Border color for each selected item  |\n| tagTextColor | No  | (String) Text color for selected items list |\n| selectedItemFontFamily | No   | (String) Font family for each selected item in multi-select drop-down |\n| selectedItemTextColor | No   | (String) Text color for each selected item in multi-select drop-down |\n| selectedItemIconColor | No     | (String) Color for `selected` check icon for each selected item in multi-select drop-down |\n| itemFontFamily | No   | (String) Font family for each non-selected item in multi-select drop-down |\n| itemTextColor | No   | (String) Text color for each non-selected item in multi-select drop-down |\n| searchInputStyle | No   | (Object) Style object for multi-select input element  |\n| hideSubmitButton | No | (Boolean) Defaults to false. Hide submit button from dropdown, and rather use arrow-button in search field |\n| hideTags | No | (Boolean) Defaults to false. Hide tokenized selected items, in case selected items are to be shown somewhere else in view (check below for more info) |\n| submitButtonColor | No   | (String) Background color for submit button  |\n| submitButtonText | No   | (String) Text displayed on submit button  |\n\n## Note\n\n- Tokenized selected items can be displayed in any other part of the view by adding a `ref` to the `MultiSelect` component like so `ref={(component) => { this.multiSelect = component }}`. Then add this to any part of the screen you want the tokens to show up: `this.multiSelect.getSelectedItemsExt(selectedItems)`. The `selectedItems` argument passed into the above mentioned method is the same `selectedItems` passed as the main component selected items prop. (See example above).\n\n- If users shouldn't be able to select any of the items in the dropdown list, set a `disabled` key to true in the item. Such item will be rendered in gray and won't be clickable.\n\n- When using the `single` prop, `selectedItems` should still be passed in as an array of selected items keys. Also, when an item is selected in the single mode, the selected item is returned as an array of string.\n\n- The `items` props must be passed as an array of objects with a compulsory `name` key present in each object as the name key is used to display the items in the options component.\n\n### Removing all selected items\n\nTo use, add ref to MultiSelect component in parent component, then call method against reference. i.e.\n\n```javascript\n<MultiSelect\n  ref={c => this._multiSelect = c}\n  ...\n/>\n\nclearSelectedCategories = () => {\n   this._multiSelect.removeAllItems();\n};\n    \n``` \n\n\n## Contributing\n\nContributions are **welcome** and will be fully **credited**.\n\nContributions are accepted via Pull Requests on [Github](https://github.com/toystars/react-native-multiple-select).\n\n\n### Pull Requests\n\n- **Document any change in behaviour** - Make sure the `README.md` and any other relevant documentation are kept up-to-date.\n\n- **Consider our release cycle** - We try to follow [SemVer v2.0.0](http://semver.org/). Randomly breaking public APIs is not an option.\n\n- **Create feature branches** - Don't ask us to pull from your master branch.\n\n- **One pull request per feature** - If you want to do more than one thing, send multiple pull requests.\n\n- **Send coherent history** - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please [squash them](http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages) before submitting.\n\n\n## Issues\n\nCheck issues for current issues.\n\n## Contributors\n\n[Mustapha Babatunde](https://twitter.com/iAmToystars)\n\n[PWoltman](https://github.com/pwoltman)\n\n[mikaello](https://github.com/mikaello)\n \n\n## License\n\nThe MIT License (MIT). Please see [LICENSE](LICENSE) for more information.",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Mustapha Babatunde\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-native-multiple-select/-/react-native-multiple-select-0.2.9.tgz#1f257838182c454e5d69c46fe082100b0db78615",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-native-multiple-select/-/react-native-multiple-select-0.2.9.tgz",
    "hash": "1f257838182c454e5d69c46fe082100b0db78615",
    "integrity": "sha512-5tTD6Elfuq8C02JL6hQC92DMMWRjrIRvaiqlauhQDC9qjAEnV+Fqm8PUEetxPGjt5CBGvQCKmyevr4Rkt9Hu8w==",
    "registry": "npm",
    "packageName": "react-native-multiple-select",
    "cacheIntegrity": "sha512-5tTD6Elfuq8C02JL6hQC92DMMWRjrIRvaiqlauhQDC9qjAEnV+Fqm8PUEetxPGjt5CBGvQCKmyevr4Rkt9Hu8w== sha1-HyV4OBgsRU5dacRv4IIQCw23hhU="
  },
  "registry": "npm",
  "hash": "1f257838182c454e5d69c46fe082100b0db78615"
}