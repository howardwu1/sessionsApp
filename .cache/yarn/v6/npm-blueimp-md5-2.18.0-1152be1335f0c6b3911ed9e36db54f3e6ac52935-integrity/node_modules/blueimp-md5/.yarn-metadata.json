{
  "manifest": {
    "name": "blueimp-md5",
    "version": "2.18.0",
    "title": "JavaScript MD5",
    "description": "JavaScript MD5 implementation. Compatible with server-side environments like Node.js, module loaders like RequireJS, Browserify or webpack and all web browsers.",
    "keywords": [
      "javascript",
      "md5"
    ],
    "homepage": "https://github.com/blueimp/JavaScript-MD5",
    "author": {
      "name": "Sebastian Tschan",
      "url": "https://blueimp.net"
    },
    "contributors": [
      {
        "name": "Paul Johnston",
        "url": "http://pajhome.org.uk/crypt/md5"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/blueimp/JavaScript-MD5.git"
    },
    "license": "MIT",
    "devDependencies": {
      "chai": "4",
      "eslint": "7",
      "eslint-config-blueimp": "2",
      "eslint-config-prettier": "6",
      "eslint-plugin-jsdoc": "30",
      "eslint-plugin-prettier": "3",
      "mocha": "8",
      "prettier": "2",
      "uglify-js": "3"
    },
    "eslintConfig": {
      "extends": [
        "blueimp",
        "plugin:jsdoc/recommended",
        "plugin:prettier/recommended"
      ],
      "env": {
        "browser": true,
        "node": true
      }
    },
    "eslintIgnore": [
      "js/*.min.js",
      "test/vendor"
    ],
    "prettier": {
      "arrowParens": "avoid",
      "proseWrap": "always",
      "semi": false,
      "singleQuote": true,
      "trailingComma": "none"
    },
    "scripts": {
      "lint": "eslint .",
      "unit": "mocha",
      "test": "npm run lint && npm run unit",
      "build": "cd js && uglifyjs md5.js -c -m -o md5.min.js --source-map url=md5.min.js.map",
      "preversion": "npm test",
      "version": "npm run build && git add -A js",
      "postversion": "git push --tags origin master master:gh-pages && npm publish"
    },
    "files": [
      "js/*.js",
      "js/*.js.map"
    ],
    "main": "js/md5.js",
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-blueimp-md5-2.18.0-1152be1335f0c6b3911ed9e36db54f3e6ac52935-integrity/node_modules/blueimp-md5/package.json",
    "readmeFilename": "README.md",
    "readme": "# JavaScript MD5\n\n## Contents\n\n- [Demo](https://blueimp.github.io/JavaScript-MD5/)\n- [Description](#description)\n- [Usage](#usage)\n  - [Client-side](#client-side)\n  - [Server-side](#server-side)\n- [Requirements](#requirements)\n- [API](#api)\n- [Tests](#tests)\n- [License](#license)\n\n## Description\n\nJavaScript [MD5](https://en.wikipedia.org/wiki/MD5) implementation.  \nCompatible with server-side environments like [Node.js](https://nodejs.org/),\nmodule loaders like [RequireJS](https://requirejs.org/) or\n[webpack](https://webpack.js.org/) and all web browsers.\n\n## Usage\n\n### Client-side\n\nInstall the **blueimp-md5** package with [NPM](https://www.npmjs.org/):\n\n```sh\nnpm install blueimp-md5\n```\n\nInclude the (minified) JavaScript [MD5](https://en.wikipedia.org/wiki/MD5)\nscript in your HTML markup:\n\n```html\n<script src=\"js/md5.min.js\"></script>\n```\n\nIn your application code, calculate the\n([hex](https://en.wikipedia.org/wiki/Hexadecimal)-encoded)\n[MD5](https://en.wikipedia.org/wiki/MD5) hash of a string by calling the **md5**\nmethod with the string as argument:\n\n```js\nvar hash = md5('value') // \"2063c1608d6e0baf80249c42e2be5804\"\n```\n\n### Server-side\n\nThe following is an example how to use the JavaScript MD5 module on the\nserver-side with [Node.js](https://nodejs.org/).\n\nInstall the **blueimp-md5** package with [NPM](https://www.npmjs.org/):\n\n```sh\nnpm install blueimp-md5\n```\n\nAdd a file **server.js** with the following content:\n\n```js\nrequire('http')\n  .createServer(function (req, res) {\n    // The md5 module exports the md5() function:\n    var md5 = require('./md5'),\n      // Use the following version if you installed the package with npm:\n      // var md5 = require(\"blueimp-md5\"),\n      url = require('url'),\n      query = url.parse(req.url).query\n    res.writeHead(200, { 'Content-Type': 'text/plain' })\n    // Calculate and print the MD5 hash of the url query:\n    res.end(md5(query))\n  })\n  .listen(8080, 'localhost')\nconsole.log('Server running at http://localhost:8080/')\n```\n\nRun the application with the following command:\n\n```sh\nnode server.js\n```\n\n## Requirements\n\nThe JavaScript MD5 script has zero dependencies.\n\n## API\n\nCalculate the ([hex](https://en.wikipedia.org/wiki/Hexadecimal)-encoded)\n[MD5](https://en.wikipedia.org/wiki/MD5) hash of a given string value:\n\n```js\nvar hash = md5('value') // \"2063c1608d6e0baf80249c42e2be5804\"\n```\n\nCalculate the ([hex](https://en.wikipedia.org/wiki/Hexadecimal)-encoded)\n[HMAC](https://en.wikipedia.org/wiki/HMAC)-MD5 hash of a given string value and\nkey:\n\n```js\nvar hash = md5('value', 'key') // \"01433efd5f16327ea4b31144572c67f6\"\n```\n\nCalculate the raw [MD5](https://en.wikipedia.org/wiki/MD5) hash of a given\nstring value:\n\n```js\nvar hash = md5('value', null, true)\n```\n\nCalculate the raw [HMAC](https://en.wikipedia.org/wiki/HMAC)-MD5 hash of a given\nstring value and key:\n\n```js\nvar hash = md5('value', 'key', true)\n```\n\n## Tests\n\nThe JavaScript MD5 project comes with\n[Unit Tests](https://en.wikipedia.org/wiki/Unit_testing).  \nThere are two different ways to run the tests:\n\n- Open test/index.html in your browser or\n- run `npm test` in the Terminal in the root path of the repository package.\n\nThe first one tests the browser integration, the second one the\n[Node.js](https://nodejs.org/) integration.\n\n## License\n\nThe JavaScript MD5 script is released under the\n[MIT license](https://opensource.org/licenses/MIT).\n",
    "licenseText": "MIT License\n\nCopyright Â© 2011 Sebastian Tschan, https://blueimp.net\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/blueimp-md5/-/blueimp-md5-2.18.0.tgz#1152be1335f0c6b3911ed9e36db54f3e6ac52935",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/blueimp-md5/-/blueimp-md5-2.18.0.tgz",
    "hash": "1152be1335f0c6b3911ed9e36db54f3e6ac52935",
    "integrity": "sha512-vE52okJvzsVWhcgUHOv+69OG3Mdg151xyn41aVQN/5W5S+S43qZhxECtYLAEHMSFWX6Mv5IZrzj3T5+JqXfj5Q==",
    "registry": "npm",
    "packageName": "blueimp-md5",
    "cacheIntegrity": "sha512-vE52okJvzsVWhcgUHOv+69OG3Mdg151xyn41aVQN/5W5S+S43qZhxECtYLAEHMSFWX6Mv5IZrzj3T5+JqXfj5Q== sha1-EVK+EzXwxrORHtnjbbVPPmrFKTU="
  },
  "registry": "npm",
  "hash": "1152be1335f0c6b3911ed9e36db54f3e6ac52935"
}