{
  "manifest": {
    "name": "babel-preset-expo",
    "version": "8.1.1",
    "description": "The Babel preset for Expo projects",
    "main": "index.js",
    "files": [
      "index.js",
      "lazy-imports-blacklist.js",
      "plugins"
    ],
    "scripts": {
      "jest": "jest",
      "lint": "eslint .",
      "test": "jest --watch"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/expo/expo.git",
      "directory": "packages/babel-preset-expo"
    },
    "keywords": [
      "babel",
      "babel-preset",
      "expo",
      "expo-web",
      "react-native",
      "react-native-web",
      "metro",
      "webpack"
    ],
    "author": {
      "name": "Expo",
      "email": "support@expo.io"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/expo/expo/issues"
    },
    "homepage": "https://github.com/expo/expo/tree/master/packages/babel-preset-expo#readme",
    "eslintConfig": {
      "extends": "universe/node"
    },
    "jest": {
      "testEnvironment": "node",
      "testPathIgnorePatterns": [
        "<rootDir>/node_modules/",
        "<rootDir>/__tests__/samples/"
      ]
    },
    "dependencies": {
      "@babel/plugin-proposal-decorators": "^7.6.0",
      "@babel/preset-env": "^7.6.3",
      "babel-plugin-module-resolver": "^3.2.0",
      "babel-plugin-react-native-web": "^0.11.7",
      "metro-react-native-babel-preset": "^0.56.0"
    },
    "devDependencies": {
      "@babel/core": "^7.6.4",
      "jest": "^25.2.0"
    },
    "gitHead": "3ad68bbd9847ebc8a55272c263b17d998a92f64f",
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-babel-preset-expo-8.1.1-7b6bd561ee598197c7f49572c85f3f45df94d57e-integrity/node_modules/babel-preset-expo/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-preset-expo\n\nThis preset extends the default React Native preset (`metro-react-native-babel-preset`) and adds support for decorators, tree-shaking web packages, and loading font icons with optional native dependencies if they're installed.\n\nYou can use this preset in any React Native project as a drop-in replacement for `metro-react-native-babel-preset`. If your project isn't using native font loading or web support then this preset will only add support for decorators with `@babel/plugin-proposal-decorators` - this is mostly used for supporting legacy community libraries.\n\nIf you start your **web** project with `@expo/webpack-config` or `expo start:web` and your project doesn't contain a `babel.config.js` or a `.babelrc` then it will default to using `babel-preset-expo` for loading.\n\nIf you have problems with the code in this repository, please file issues & bug reports\nat https://github.com/expo/expo. Thanks!\n\n## Expo Bundler Spec Compliance\n\nA bundler must follow these requirements if they are to be considered spec compliant for use with a **universal React** (Expo) project.\n\n### Babel Loader\n\nThe babel loading mechanism must include the following properties on its `caller`.\n\n#### platform\n\nA `platform` property denoting the target platform. If the `platform` is not defined, it will default to using `web` when the `bundler` is `webpack` -- this is temporary and will throw an error in the future.\n\n| Value     | Description             |\n| --------- | ----------------------- |\n| `ios`     | Runs on iOS devices     |\n| `android` | Runs on Android devices |\n| `web`     | Runs in web browsers    |\n\n#### bundler\n\nA `bundler` property denoting the name of the bundler that is being used to create the JavaScript bundle.\nIf the `bundler` is not defined, it will default to checking if a `babel-loader` is used, if so then `webpack` will be used, otherwise it will default to `metro`.\n\n| Value     | Description                      |\n| --------- | -------------------------------- |\n| `metro`   | Bundling with [Metro][metro]     |\n| `webpack` | Bundling with [Webpack][webpack] |\n\n[metro]: https://facebook.github.io/metro/\n[webpack]: https://webpack.js.org/\n\n## Options\n\n### [`lazyImports`](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy)\n\nChanges Babel's compiled `import` statements to be lazily evaluated when their imported bindings are used for the first time.\n\n_Note:_ this option has an effect only when the `disableImportExportTransform` option is set to `false`. On Android and iOS, `disableImportExportTransform` defaults to `false`, and on web it defaults to `true` to allow for tree shaking.\n\nThis can improve the initial load time of your app because evaluating dependencies up front is sometimes entirely un-necessary, particularly when the dependencies have no side effects.\n\nThe value of `lazyImports` has a few possible effects:\n\n- `null` - [metro-react-native-babel-preset](https://github.com/facebook/metro/tree/master/packages/metro-react-native-babel-preset) will handle it. (Learn more about it here: https://github.com/facebook/metro/commit/23e3503dde5f914f3e642ef214f508d0a699851d)\n\n- `false` - No lazy initialization of any imported module.\n\n- `true` - Lazy-init all imported modules except local imports (e.g., `./foo`), certain Expo packages that have side effects, and the two cases mentioned [here](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy).\n\n- `Array<string>` - [babel-plugin-transform-modules-commonjs](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy) will handle it.\n\n- `(string) => boolean` - [babel-plugin-transform-modules-commonjs](https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#lazy) will handle it.\n\n  If you choose to do this, you can also access the list of Expo packages that have side effects by using `const lazyImportsBlacklist = require('babel-preset-expo/lazy-imports-blacklist');` which returns a `Set`.\n\n**default:** `null`\n\n```js\n[\n    'babel-preset-expo',\n    {\n        lazyImports: true\n    }\n],\n```\n\n### `web.disableImportExportTransform`\n\nEnabling this option will allow your project to run with older JavaScript syntax (i.e. `module.exports`). This option will break tree shaking and increase your bundle size, but will eliminate the following error when `module.exports` is used:\n\n> `TypeError: Cannot assign to read only property 'exports' of object '#<Object>'`\n\n**default:** `false`\n\n```js\n[\n    'babel-preset-expo',\n    {\n        web: { disableImportExportTransform: true }\n    }\n],\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-preset-expo/-/babel-preset-expo-8.1.1.tgz#7b6bd561ee598197c7f49572c85f3f45df94d57e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-preset-expo/-/babel-preset-expo-8.1.1.tgz",
    "hash": "7b6bd561ee598197c7f49572c85f3f45df94d57e",
    "integrity": "sha512-73VtU6+IsOPMHsXIXHJTycoAmE9hDCvWY2E14E3sVL/EhOJsH3YbWirRTiUiklfEMAEaOxBRc4C4GxqGmaFjxQ==",
    "registry": "npm",
    "packageName": "babel-preset-expo",
    "cacheIntegrity": "sha512-73VtU6+IsOPMHsXIXHJTycoAmE9hDCvWY2E14E3sVL/EhOJsH3YbWirRTiUiklfEMAEaOxBRc4C4GxqGmaFjxQ== sha1-e2vVYe5ZgZfH9JVyyF8/Rd+U1X4="
  },
  "registry": "npm",
  "hash": "7b6bd561ee598197c7f49572c85f3f45df94d57e"
}