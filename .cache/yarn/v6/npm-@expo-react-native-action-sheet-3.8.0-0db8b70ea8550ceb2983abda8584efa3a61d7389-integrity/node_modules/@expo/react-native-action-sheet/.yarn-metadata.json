{
  "manifest": {
    "name": "@expo/react-native-action-sheet",
    "version": "3.8.0",
    "description": "A cross-platform ActionSheet for React Native",
    "react-native": "lib/module/index.js",
    "types": "lib/typescript/index.d.ts",
    "main": "lib/commonjs/index.js",
    "module": "lib/module/index.js",
    "files": [
      "lib"
    ],
    "scripts": {
      "prepare": "bob build",
      "build": "bob build",
      "type-check": "tsc --noEmit",
      "lint": "eslint . --ext .ts,.tsx --fix",
      "fmt": "prettier --write \"{src,example}/**/*.{ts,tsx}\"",
      "semantic-release": "semantic-release"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/expo/react-native-action-sheet.git"
    },
    "keywords": [
      "expo",
      "react-native",
      "action-sheet"
    ],
    "author": {
      "name": "Jesse Ruder",
      "email": "jesse@sixfivezero.net"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/expo/react-native-action-sheet/issues"
    },
    "homepage": "https://github.com/expo/react-native-action-sheet",
    "devDependencies": {
      "@react-native-community/bob": "^0.6.1",
      "@react-native-community/eslint-config": "^0.0.5",
      "@semantic-release/changelog": "^3.0.5",
      "@semantic-release/git": "^7.0.18",
      "@types/react": "^16.8.23",
      "@types/react-native": "^0.57.65",
      "@typescript-eslint/eslint-plugin": "^1.12.0",
      "@typescript-eslint/parser": "^1.12.0",
      "eslint": "^6.0.1",
      "eslint-config-prettier": "^6.0.0",
      "eslint-plugin-prettier": "3.1.0",
      "husky": "^3.0.0",
      "lint-staged": "^9.2.0",
      "prettier": "^1.18.2",
      "react": "^16.8.6",
      "react-native": "https://github.com/expo/react-native/archive/sdk-33.0.0.tar.gz",
      "semantic-release": "^15.13.28",
      "typescript": "^3.5.3"
    },
    "peerDependencies": {
      "react": ">=16.3.0"
    },
    "@react-native-community/bob": {
      "source": "src",
      "output": "lib",
      "targets": [
        "commonjs",
        "module",
        "typescript"
      ]
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.{js,ts,tsx}": [
        "yarn lint",
        "yarn fmt",
        "git add"
      ]
    },
    "dependencies": {
      "@types/hoist-non-react-statics": "^3.3.1",
      "hoist-non-react-statics": "^3.3.0"
    },
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-@expo-react-native-action-sheet-3.8.0-0db8b70ea8550ceb2983abda8584efa3a61d7389-integrity/node_modules/@expo/react-native-action-sheet/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-native-action-sheet\n[![npm](https://img.shields.io/npm/v/@expo/react-native-action-sheet.svg?style=flat-square)](https://www.npmjs.com/package/@expo/react-native-action-sheet)\n[![License: MIT](https://img.shields.io/github/license/nd-02110114/goofi-mobile.svg)](https://opensource.org/licenses/MIT)\n[![Slack](https://slack.expo.io/badge.svg)](https://slack.expo.io)\n\nActionSheet is a cross-platform React Native component that uses the native UIActionSheet on iOS and a JS implementation on Android. Almost a drop in replacement for [ActionSheetIOS](https://facebook.github.io/react-native/docs/actionsheetios.html) except it cannot be called statically.\n\n\n| iOS                       | Android                   | Web                       |\n|---------------------------|---------------------------|---------------------------|\n| <img  src=\"https://raw.githubusercontent.com/expo/react-native-action-sheet/master/gif/ios.gif\" width=\"200\" height=\"400\"/> | <img  src=\"https://raw.githubusercontent.com/expo/react-native-action-sheet/master/gif/android.gif\" width=\"200\" height=\"400\"/> | <img  src=\"https://raw.githubusercontent.com/expo/react-native-action-sheet/master/gif/web.gif\" width=\"400\" height=\"400\"/> |\n\n\n## Installation\n\n```\n$ npm install @expo/react-native-action-sheet -S\n```\nor\n```\n$ yarn add @expo/react-native-action-sheet\n```\n\n## A basic ActionSheet Setup\n\n### 1. Wrap your top-level component with `<ActionSheetProvider />`\n\n```es6\n\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet'\n\nclass AppContainer extends React.Component {\n  render() {\n    return (\n      <ActionSheetProvider>\n        <ConnectedApp />\n      </ActionSheetProvider>\n    );\n  }\n}\n```\n\n### 2. Connect your component which uses showActionSheetWithOptions.\n```es6\nimport { connectActionSheet } from '@expo/react-native-action-sheet'\n\nclass App extends React.Component {\n  /* ... */\n}\n\nconst ConnectedApp = connectActionSheet(App)\n\nexport default ConnectedApp\n```\n\n`App` component can access the actionSheet method as `this.props.showActionSheetWithOptions`\n\n```es6\n_onOpenActionSheet = () => {\n  // Same interface as https://facebook.github.io/react-native/docs/actionsheetios.html\n  const options = ['Delete', 'Save', 'Cancel'];\n  const destructiveButtonIndex = 0;\n  const cancelButtonIndex = 2;\n\n  this.props.showActionSheetWithOptions(\n    {\n      options,\n      cancelButtonIndex,\n      destructiveButtonIndex,\n    },\n    buttonIndex => {\n      // Do something here depending on the button index selected\n    },\n  );\n};\n```\n\nYou can use a hook instead of the higher order component if you are on React 16.8 or newer.\n\n```es6\nimport { useActionSheet } from '@expo/react-native-action-sheet'\n\nexport default function App () {\n  const { showActionSheetWithOptions } = useActionSheet();\n  /* ... */\n}\n```\n\n## Options\n\nThe goal of this library is to mimic the native iOS and Android ActionSheets as closely as possible.\n\nThis library can also be used in the browser with Expo for web.\n\n### Universal Props\n\nThe same options available on React Native's [ActionSheetIOS](https://facebook.github.io/react-native/docs/actionsheetios.html#showactionsheetwithoptions) component exist for both iOS and Android in this library.\n\n### iOS Only Props\n\n| Name             | Type   | Required | Default |\n| -----------------| -------| -------- | ------- |\n| anchor           | number | No       |         |\n\n#### `anchor` (optional)\niPad only option that allows for docking the action sheet to a node. See [ShowActionSheetButton.tsx](/example/ShowActionSheetButton.tsx) for an example on how to implement this.\n\n### Android/Web-Only Props\n\nThe below props allow modification of the Android ActionSheet. They have no effect on the look on iOS as the native iOS Action Sheet does not have options for modifying these options.\n\n\n| Name             | Type                              | Required | Default |\n| -----------------| ----------------------------------| -------- | ------- |\n| icons            | array of required images or icons | No       |         |\n| tintIcons        | boolean                           | No       |  true   |\n| textStyle        | TextStyle                         | No       |         |\n| titleTextStyle   | TextStyle                         | No       |         |\n| messageTextStyle | TextStyle                         | No       |         |\n| autoFocus        | boolean                           | No       |  false  |\n| showSeparators   | boolean                           | No       |  false  |\n| containerStyle   | ViewStyle                         | No       |         |\n| separatorStyle   | ViewStyle                         | No       |         |\n| useModal         | boolean                           | No       | false   |\n| destructiveColor | string                            | No       | #d32f2f |\n\n#### `icons` (optional)\n\nShow icons to go along with each option. If image source paths are provided via `require`, images will be rendered for you. Alternatively, you can provide an array of elements such as vector icons, pre-rendered Images, etc.\n\n#### `tintIcons` (optional)\n Icons by default will be tinted to match the text color. When set to false, the icons will be the color of the source image. This is useful if you want to use multicolor icons. If you provide your own nodes/pre-rendered icons rather than required images in the `icons` array, you will need to tint them appropriately before providing them in the array of `icons`; `tintColor` will not be applied to icons unless they are images from a required source.\n\n#### `textStyle` (optional)\nApply any text style props to the options. If the `tintColor` option is provided, it takes precedence over a color text style prop.\n\n#### `titleTextStyle` (optional)\nApply any text style props to the title if present.\n\n#### `messageTextStyle` (optional)\nApply any text style props to the message if present.\n\n#### `autoFocus`: (optional)\nIf true, will give the first option screen reader focus automatically when the action sheet becomes visible.\nOn iOS, this is the default behavior of the native action sheet.\n\n#### `showSeparators`: (optional)\nShow separators between items. On iOS, separators always show so this prop has no effect.\n\n#### `containerStyle`: (optional)\nApply any view style props to the container rather than use the default look (e.g. dark mode).\n\n#### `separatorStyle`: (optional)\nModify the look of the separators rather than use the default look.\n\n#### `useModal`: (optional)\nWrap the ActionSheet with a Modal, in order to show in front of other Modals that were already opened ([issue reference](https://github.com/expo/react-native-action-sheet/issues/164)).\n\n#### `destructiveColor`: (optional)\nModify color for text of destructive option.\n\n## Try it out\n\nTry it in Expo: https://expo.io/@community/react-native-action-sheet-example\n\n## Example\n\nSee the [example app](https://github.com/expo/react-native-action-sheet/tree/master/example).\n\n### Usage\n```\n$ cd example\n$ yarn\n\n// build simulator\n$ yarn ios\n$ yarn android\n\n// web\n$ yarn web\n```\n\n## Development\n\n### Setup\n```\n$ git clone git@github.com:expo/react-native-action-sheet.git\n$ cd react-native-action-sheet\n$ yarn\n```\n\n### Build\nWe use [bob](https://github.com/react-native-community/bob).\n```\n$ yarn build\n```\n\n### Lint & Format\n```\n// tsc\n$ yarn type-check\n\n// ESLint\n$ yarn lint\n\n// prettier\n$ yarn fmt\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Expo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@expo/react-native-action-sheet/-/react-native-action-sheet-3.8.0.tgz#0db8b70ea8550ceb2983abda8584efa3a61d7389",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@expo/react-native-action-sheet/-/react-native-action-sheet-3.8.0.tgz",
    "hash": "0db8b70ea8550ceb2983abda8584efa3a61d7389",
    "integrity": "sha512-tCfwysuqy0sfaN+aA98IKUrwCLKsbDHSYLcnHrx9wNbawOHNez8rSeFtieAS48/HyrPI75yg/ZGvxe6UsJRS8Q==",
    "registry": "npm",
    "packageName": "@expo/react-native-action-sheet",
    "cacheIntegrity": "sha512-tCfwysuqy0sfaN+aA98IKUrwCLKsbDHSYLcnHrx9wNbawOHNez8rSeFtieAS48/HyrPI75yg/ZGvxe6UsJRS8Q== sha1-Dbi3DqhVDOspg6vahYTvo6Ydc4k="
  },
  "registry": "npm",
  "hash": "0db8b70ea8550ceb2983abda8584efa3a61d7389"
}