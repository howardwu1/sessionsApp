{
  "manifest": {
    "name": "slugify",
    "version": "1.4.7",
    "description": "Slugifies a String",
    "keywords": [
      "slugify",
      "slug",
      "url",
      "urlify"
    ],
    "license": "MIT",
    "homepage": "https://github.com/simov/slugify",
    "author": {
      "name": "Simeon Velichkov",
      "email": "simeonvelichkov@gmail.com",
      "url": "https://simov.github.io"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/simov/slugify.git"
    },
    "devDependencies": {
      "coveralls": "^3.1.0",
      "mocha": "^7.2.0",
      "nyc": "^15.1.0"
    },
    "main": "./slugify.js",
    "files": [
      "LICENSE",
      "README.md",
      "slugify.d.ts",
      "slugify.js"
    ],
    "types": "slugify.d.ts",
    "scripts": {
      "build": "node bin/build",
      "test:ci": "npx mocha --recursive",
      "test:cov": "npx nyc --reporter=lcov --reporter=text-summary mocha -- --recursive",
      "test": "npm run build && npm run test:ci"
    },
    "engines": {
      "node": ">=8.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-slugify-1.4.7-e42359d505afd84a44513280868e31202a79a628-integrity/node_modules/slugify/package.json",
    "readmeFilename": "README.md",
    "readme": "\n# slugify\n\n[![npm-version]][npm] [![travis-ci]][travis] [![coveralls-status]][coveralls]\n\n```js\nvar slugify = require('slugify')\n\nslugify('some string') // some-string\n\n// if you prefer something other than '-' as separator\nslugify('some string', '_')  // some_string\n```\n\n- Vanilla ES5 JavaScript\n- No dependencies\n- Coerces foreign symbols to their English equivalent (check out the [charMap][charmap] for more details)\n- Works in the browser (window.slugify) and AMD/CommonJS-flavored module loaders\n\n## Options\n\n```js\nslugify('some string', {\n  replacement: '-',  // replace spaces with replacement character, defaults to `-`\n  remove: undefined, // remove characters that match regex, defaults to `undefined`\n  lower: false,      // convert to lower case, defaults to `false`\n  strict: false,     // strip special characters except replacement, defaults to `false`\n  locale: 'vi'       // language code of the locale to use\n})\n```\n\n## Remove\n\nFor example, to remove `*+~.()'\"!:@` from the result slug, you can use `slugify('..', {remove: /[*+~.()'\"!:@]/g})`.\n\n## Locales\n\nThe main `charmap.json` file contains all known characters and their transliteration. All new characters should be added there first. In case you stumble upon a character already set in `charmap.json`, but not transliterated correctly according to your language, then you have to add those characters in `locales.json` to override the already existing transliteration in `charmap.json`, but for your locale only.\n\nYou can get the correct language code of your language from [here](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n## Extend\n\nOut of the box `slugify` comes with support for a handful of Unicode symbols. For example the `☢` (radioactive) symbol is not defined in the [`charMap`][charmap] and therefore it will be stripped by default:\n\n```js\nslugify('unicode ♥ is ☢') // unicode-love-is\n```\n\nHowever you can extend the supported symbols, or override the existing ones with your own:\n\n```js\nslugify.extend({'☢': 'radioactive'})\nslugify('unicode ♥ is ☢') // unicode-love-is-radioactive\n```\n\nKeep in mind that the `extend` method extends/overrides the default `charMap` for the entire process. In case you need a fresh instance of the slugify's `charMap` object you have to clean up the module cache first:\n\n```js\ndelete require.cache[require.resolve('slugify')]\nvar slugify = require('slugify')\n```\n\n## Contribute\n\n1. Add chars to `charmap.json`\n2. Run tests `npm test`\n3. The tests will build the charmap in `index.js` and will sort the `charmap.json`\n4. Commit **all** modified files\n\n---\n\n> This module was originally a vanilla javascript port of [node-slug][node-slug].<br>\n> Note that the original [slug][slug] module has been ported to vanilla javascript too.<br>\n> One major difference between the two modules is that `slugify` does not depend on the external [unicode][unicode] module.\n\n\n  [npm-version]: https://img.shields.io/npm/v/slugify.svg?style=flat-square (NPM Package Version)\n  [travis-ci]: https://img.shields.io/travis/simov/slugify/master.svg?style=flat-square (Build Status - Travis CI)\n  [coveralls-status]: https://img.shields.io/coveralls/simov/slugify.svg?style=flat-square (Test Coverage - Coveralls)\n\n  [npm]: https://www.npmjs.com/package/slugify\n  [travis]: https://travis-ci.org/simov/slugify\n  [coveralls]: https://coveralls.io/r/simov/slugify?branch=master\n\n  [node-slug]: https://github.com/dodo/node-slug\n  [slug]: https://www.npmjs.com/package/slug\n  [unicode]: https://www.npmjs.com/package/unicode\n  [index]: https://github.com/simov/slugify/blob/master/index.js\n  [charmap]: https://github.com/simov/slugify/blob/master/config/charmap.json\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Simeon Velichkov <simeonvelichkov@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/slugify/-/slugify-1.4.7.tgz#e42359d505afd84a44513280868e31202a79a628",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/slugify/-/slugify-1.4.7.tgz",
    "hash": "e42359d505afd84a44513280868e31202a79a628",
    "integrity": "sha512-tf+h5W1IrjNm/9rKKj0JU2MDMruiopx0jjVA5zCdBtcGjfp0+c5rHw/zADLC3IeKlGHtVbHtpfzvYA0OYT+HKg==",
    "registry": "npm",
    "packageName": "slugify",
    "cacheIntegrity": "sha512-tf+h5W1IrjNm/9rKKj0JU2MDMruiopx0jjVA5zCdBtcGjfp0+c5rHw/zADLC3IeKlGHtVbHtpfzvYA0OYT+HKg== sha1-5CNZ1QWv2EpEUTKAho4xICp5pig="
  },
  "registry": "npm",
  "hash": "e42359d505afd84a44513280868e31202a79a628"
}