{
  "manifest": {
    "name": "xpipe",
    "version": "1.0.5",
    "description": "Use cross-platform IPC paths in node.",
    "main": "index.js",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/nodexo/xpipe.git"
    },
    "keywords": [
      "ipc",
      "path",
      "cross platform",
      "unix",
      "sockets",
      "windows",
      "named pipes"
    ],
    "author": {
      "name": "Michael Kortstiege"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/nodexo/xpipe/issues"
    },
    "homepage": "https://github.com/nodexo/xpipe#readme",
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-xpipe-1.0.5-8dd8bf45fc3f7f55f0e054b878f43a62614dafdf-integrity/node_modules/xpipe/package.json",
    "readmeFilename": "README.md",
    "readme": "\nxpipe<sup>[1]</sup>\n===================\n\nUse cross-platform IPC paths in node.\n\nBackground\n----------\n\nIn node - instead of using TCP - you can also take IPC<sup>[2]</sup> to communicate to services like\n\n- web servers (NGINX)\n- data structure stores (redis)\n- databases (MongoDB, Cassandra)\n- etc.\n\nor to interconnect node apps, Electron frontends/backends etc.  \n\n**This can lead to large speed gains.**\n\nOn unixoid operating systems - e.g. Linux and OS X - we use [Unix domain sockets](https://en.wikipedia.org/wiki/Unix_domain_socket) \nthat are referred by file descriptors.  \nWindows has [named pipes](https://en.wikipedia.org/wiki/Named_pipe) for it, living \nin the root directory of the NPFS<sup>[3]</sup>, mounted under the special path \\\\\\\\.\\\\pipe\\\\.\n\n**To mitigate these differences and to to support writing portable code, xpipe was born...**\n\nInstallation\n------------\n\n    npm install xpipe\n\n\nUsage\n-----\n\n```javascript\nconst xpipe = require('xpipe');\n\nlet prefix = xpipe.prefix;\nconsole.log( `prefix:  ${prefix}` );\n/*\n  [empty string] on Linux and OS X\n  \"//./pipe/\" on Windows\n*/\n\nlet ipcPath = xpipe.eq('/tmp/my.sock');\nconsole.log( `ipcPath: ${ipcPath}` );\n/*\n  \"/tmp/my.sock\" on Linux and OS X\n  \"//./pipe/tmp/my.sock\" on Windows\n*/\n```\n\nWhen did Windows start accepting forward slash as a path separator?\n-------------------------------------------------------------------\n\nEvery Windows API/kernel ever has accepted \"/\" as a path separator.\nSo has every version of MS-DOS beginning with DOS 2.0 (the first version \nto support subdirectories).\n\nIt's only been in command lines that \"/\" was not allowed when it had\nalready been used as a switch delimiter in MS-DOS 1.0 (introduced by IBM).\n\nThis behaviour could be bypassed (at least on modern Windows systems) by including \nthe path in double quotation marks:\n- **cd c:/Windows** and **cd /Windows** work<sup>[4]</sup>\n- **dir ./ /B** fails but **dir \"./\" /B** works\n\nFurther articles: \n- https://en.m.wikipedia.org/wiki/Path_(computing)\n\n<p>&nbsp;</p> \n  \n[1]: xpipe stands for **xp (cross-platform) IPC path equalizer**  \n[2]: inter-process communication, see https://en.wikipedia.org/wiki/Inter-process_communication  \n[3]: named pipe file system (in-memory)  \n[4]: on Windows \"/\" without a leading drive letter represents the root of the current drive  \n",
    "licenseText": "MIT License\n\nCopyright (c) 2016 Michael Kortstiege\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/xpipe/-/xpipe-1.0.5.tgz#8dd8bf45fc3f7f55f0e054b878f43a62614dafdf",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/xpipe/-/xpipe-1.0.5.tgz",
    "hash": "8dd8bf45fc3f7f55f0e054b878f43a62614dafdf",
    "integrity": "sha1-jdi/Rfw/f1Xw4FS4ePQ6YmFNr98=",
    "registry": "npm",
    "packageName": "xpipe",
    "cacheIntegrity": "sha512-tuqoLk8xPl0o+7ny9iPlEZuzjfy1zC5ZJtAGjDDZWmVTVBK5PJP0arMGVu3Y53zSyeYK+YonMVSUv0DJgGN/ig== sha1-jdi/Rfw/f1Xw4FS4ePQ6YmFNr98="
  },
  "registry": "npm",
  "hash": "8dd8bf45fc3f7f55f0e054b878f43a62614dafdf"
}