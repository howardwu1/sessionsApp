{
  "manifest": {
    "name": "@jimp/plugin-dither",
    "version": "0.12.1",
    "description": "Dither an image.",
    "main": "dist/index.js",
    "module": "es/index.js",
    "types": "index.d.ts",
    "scripts": {
      "build": "npm run build:node:production && npm run build:module",
      "build:watch": "npm run build:node:debug -- -- --watch --verbose",
      "build:debug": "npm run build:node:debug",
      "build:module": "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
      "build:node": "babel src -d dist --source-maps --config-file ../../babel.config.js",
      "build:node:debug": "cross-env BABEL_ENV=development npm run build:node",
      "build:node:production": "cross-env BABEL_ENV=production npm run build:node"
    },
    "author": {},
    "license": "MIT",
    "dependencies": {
      "@babel/runtime": "^7.7.2",
      "@jimp/utils": "^0.12.1"
    },
    "peerDependencies": {
      "@jimp/custom": ">=0.3.5"
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "942e635564e36fc243767531b4f8be036afa40b5",
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-@jimp-plugin-dither-0.12.1-1265a063423a20b9425f5055fe3ddafaa0eea9fe-integrity/node_modules/@jimp/plugin-dither/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-dither</h1>\n  <p>Apply a dither effect to an image.</p>\n</div>\n\n> Dither - is an intentionally applied form of noise used to randomize quantization error, preventing large-scale patterns such as color banding in images. Dither is routinely used in processing of both digital audio and video data, and is often one of the last stages of mastering audio to a CD.\n\n## Usage\n\nApply a ordered dithering effect\n\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.dither565();\n}\n\nmain();\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Oliver Moran\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jimp/plugin-dither/-/plugin-dither-0.12.1.tgz#1265a063423a20b9425f5055fe3ddafaa0eea9fe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jimp/plugin-dither/-/plugin-dither-0.12.1.tgz",
    "hash": "1265a063423a20b9425f5055fe3ddafaa0eea9fe",
    "integrity": "sha512-mCrBHdx2ViTLJDLcrobqGLlGhZF/Mq41bURWlElQ2ArvrQ3/xR52We9DNDfC08oQ2JVb6q3v1GnCCdn0KNojGQ==",
    "registry": "npm",
    "packageName": "@jimp/plugin-dither",
    "cacheIntegrity": "sha512-mCrBHdx2ViTLJDLcrobqGLlGhZF/Mq41bURWlElQ2ArvrQ3/xR52We9DNDfC08oQ2JVb6q3v1GnCCdn0KNojGQ== sha1-EmWgY0I6ILlCX1BV/j3a+qDuqf4="
  },
  "registry": "npm",
  "hash": "1265a063423a20b9425f5055fe3ddafaa0eea9fe"
}