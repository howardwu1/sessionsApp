{
  "manifest": {
    "name": "react-native-underline-tabbar",
    "version": "1.3.6",
    "description": "Custom Tabbar for https://github.com/skv-headless/react-native-scrollable-tab-view",
    "main": "index.js",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Slowyn/react-native-underline-tabbar.git"
    },
    "keywords": [
      "react-native",
      "react",
      "component",
      "react-native-scrollable-tab-view",
      "tabbar",
      "react-native-component",
      "react-component",
      "ios",
      "scrollable",
      "tab",
      "scroll",
      "scrolling",
      "items",
      "snap",
      "android",
      "ios"
    ],
    "author": {
      "name": "K. E. Yakushin"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/Slowyn/react-native-underline-tabbar/issues"
    },
    "homepage": "https://github.com/Slowyn/react-native-underline-tabbar#readme",
    "peerDependencies": {
      "react-native": ">=0.20.0"
    },
    "devDependencies": {
      "babel-eslint": "^8.0.1",
      "babel-plugin-module-resolver": "^2.3.0",
      "babel-preset-airbnb": "^1.1.1",
      "babel-preset-react-native": "1.9.0",
      "eslint": "^4.8.0",
      "eslint-config-airbnb": "^15.1.0",
      "eslint-import-resolver-babel-module": "^2.2.1",
      "eslint-plugin-flowtype": "^2.39.0",
      "eslint-plugin-import": "^2.7.0",
      "eslint-plugin-jsx-a11y": "^6.0.2",
      "eslint-plugin-prettier": "^2.3.1",
      "eslint-plugin-react": "^7.4.0",
      "flow-bin": "^0.56.0",
      "prettier": "^1.7.0"
    },
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/howard/.cache/yarn/v6/npm-react-native-underline-tabbar-1.3.6-9f442c200d3935fdf28ef0da6052f991da186759-integrity/node_modules/react-native-underline-tabbar/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-native-underline-tabbar\n[![npm version](https://badge.fury.io/js/react-native-underline-tabbar.svg)](https://badge.fury.io/js/react-native-underline-tabbar) [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\nCustom Tabbar for https://github.com/skv-headless/react-native-scrollable-tab-view.\nIt consists of some features e.g. scrollable content in tabs. Animations are build on matrix transformations and fully compatible with `Animated` library.\nIn a new version there was significant improvement of tabbar behaviour.\n\n## Contribution\n\n**Issues** are welcome. Please add a screenshot of bug and code snippet. Quickest way to solve issue is to reproduce it on one of the examples.\n\n**Pull requests** are welcome. If you want to change API or making something big better to create issue and discuss it first. Before submiting PR please run ```eslint .``` Also all eslint fixes are welcome.\n\nPlease attach video or gif to PR's and issues it is super helpful.\n\n## Instalation\n```\nnpm install react-native-underline-tabbar --save\nOr using Yarn\nyarn add react-native-underline-tabbar\n```\n\n## Showcase\n![react-native-underline-tabbar demo](https://raw.githubusercontent.com/Slowyn/react-native-underline-tabbar/master/demo.gif)\n\n## Documentation\n\n| Property | Type | Default | Description |\n|-----------|---------------------|----------|--------------------------------------------|\n| `tabs`       | ```{ label: string, badge:string, badgeColor?: string, [string]: any}[]``` | `required` | You don't have to pass this prop directly to tabbar. Istead, it's automatically passed from `ScrollableTabView` from `tabLabel` of your page. In defaultTabbar it is used only to pass a label, but we use it to pass there information about badges. Example ```tabLabel={{label: \"Page #4\", badge: 8, badgeColor: 'violet'}}```. Also you can pass any data you need as  it's used as `Map`|\n| `underlineColor`       | `string` | `\"navy\"` | Set a color for underline. You can use also `transparent` to hide underline |\n| `underlineHeight`       | `number` | `2` | Set a height for underline |\n| `underlineBottomPosition`       | `number` | `0` | Set a bottom for underline |\n| `tabBarStyle`       | `Object` | `{}` | Set styles to TabBar container |\n| `activeTabTextStyle`       | `Object` | `{}` | Set styles to text in tabs while tab is active |\n| `tabBarTextStyle`       | `Object` | `{}` | Set styles to text in tabs |\n| `tabBadgeColor`       | `string` | `{}` | Set a common color for all badges. To set badgeColor individually use `badgeColor` in `tab` property |\n| `tabMargin`       | `number` | `20` | Set space between tabs |\n| `tabStyles`       | ``` { tab?: Object, badgeBubble?: Object, badgeText?: Object }``` | ``` { tab: {}, badgeBubble: {}, badgeText: {} }``` | Set styles for every tab and bubble |\n\n\n## Simple Usage\n```javascript\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\nimport ScrollableTabView from 'react-native-scrollable-tab-view';\nimport TabBar from \"react-native-underline-tabbar\";\n\nconst Page = ({label}) => (\n    <View style={styles.container}>\n      <Text style={styles.welcome}>\n        {label}\n      </Text>\n      <Text style={styles.instructions}>\n        To get started, edit index.ios.js\n      </Text>\n      <Text style={styles.instructions}>\n        Press Cmd+R to reload,{'\\n'}\n        Cmd+D or shake for dev menu\n      </Text>\n    </View>\n);\n\nclass example extends Component {\n  render() {\n    return (\n        <View style={[styles.container, {paddingTop: 20}]}>\n          <ScrollableTabView\n              tabBarActiveTextColor=\"#53ac49\"\n              renderTabBar={() => <TabBar underlineColor=\"#53ac49\" />}>\n            <Page tabLabel={{label: \"Page #1\"}} label=\"Page #1\"/>\n            <Page tabLabel={{label: \"Page #2 aka Long!\", badge: 3}} label=\"Page #2 aka Long!\"/>\n            <Page tabLabel={{label: \"Page #3\"}} label=\"Page #3\"/>\n            <Page tabLabel={{label: \"Page #4 aka Page\"}} label=\"Page #4 aka Page\"/>\n            <Page tabLabel={{label: \"Page #5\"}} label=\"Page #5\"/>\n          </ScrollableTabView>\n\n        </View>\n    );\n  }\n}\n```\n\n## Advanced usage\n\n```javascript\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Animated } from 'react-native';\nimport ScrollableTabView from 'react-native-scrollable-tab-view';\nimport TabBar from 'react-native-underline-tabbar';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n    fontSize: 28,\n  },\n});\n\nconst Page = ({label, text = ''}) => (\n  <View style={styles.container}>\n    <Text style={styles.welcome}>\n      {label}\n    </Text>\n    <Text style={styles.instructions}>\n      {text}\n    </Text>\n  </View>\n);\n\nconst iconsSet = {\n  hot: require('./images/ic_whatshot.png'),\n  trending: require('./images/ic_trending_up.png'),\n  fresh: require('./images/ic_fiber_new.png'),\n  funny: require('./images/ic_tag_faces.png'),\n  movieAndTv: require('./images/ic_live_tv.png'),\n  sport: require('./images/ic_rowing.png'),\n};\n\nconst Tab = ({ tab, page, isTabActive, onPressHandler, onTabLayout, styles }) => {\n  const { label, icon } = tab;\n  const style = {\n    marginHorizontal: 20,\n    paddingVertical: 10,\n  };\n  const containerStyle = {\n    paddingHorizontal: 20,\n    paddingVertical: 5,\n    borderRadius: 25,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: styles.backgroundColor,\n    opacity: styles.opacity,\n    transform: [{ scale: styles.opacity }],\n  };\n  const textStyle = {\n    color: styles.textColor,\n    fontWeight: '600',\n  };\n  const iconStyle = {\n    tintColor: styles.textColor,\n    resizeMode: 'contain',\n    width: 22,\n    height: 22,\n    marginLeft: 10,\n  };\n  return (\n    <TouchableOpacity style={style} onPress={onPressHandler} onLayout={onTabLayout} key={page}>\n      <Animated.View style={containerStyle}>\n        <Animated.Text style={textStyle}>{label}</Animated.Text>\n        <Animated.Image style={iconStyle} source={icon} />\n      </Animated.View>\n    </TouchableOpacity>\n  );\n};\n\nclass UnderlineTabBarExample extends Component {\n  _scrollX = new Animated.Value(0);\n  // 6 is a quantity of tabs\n  interpolators = Array.from({ length: 6 }, (_, i) => i).map(idx => ({\n    scale: this._scrollX.interpolate({\n      inputRange: [idx - 1, idx, idx + 1],\n      outputRange: [1, 1.2, 1],\n      extrapolate: 'clamp',\n    }),\n    opacity: this._scrollX.interpolate({\n      inputRange: [idx - 1, idx, idx + 1],\n      outputRange: [0.9, 1, 0.9],\n      extrapolate: 'clamp',\n    }),\n    textColor: this._scrollX.interpolate({\n      inputRange: [idx - 1, idx, idx + 1],\n      outputRange: ['#000', '#fff', '#000'],\n    }),\n    backgroundColor: this._scrollX.interpolate({\n      inputRange: [idx - 1, idx, idx + 1],\n      outputRange: ['rgba(0,0,0,0.1)', '#000', 'rgba(0,0,0,0.1)'],\n      extrapolate: 'clamp',\n    }),\n  }));\n  render() {\n    return (\n      <View style={[styles.container, { paddingTop: 20 }]}>\n        <ScrollableTabView\n          renderTabBar={() => (\n            <TabBar\n              underlineColor=\"#000\"\n              tabBarStyle={{ backgroundColor: \"#fff\", borderTopColor: '#d2d2d2', borderTopWidth: 1 }}\n              renderTab={(tab, page, isTabActive, onPressHandler, onTabLayout) => (\n                <Tab\n                  key={page}\n                  tab={tab}\n                  page={page}\n                  isTabActive={isTabActive}\n                  onPressHandler={onPressHandler}\n                  onTabLayout={onTabLayout}\n                  styles={this.interpolators[page]}\n                />\n              )}\n            />\n          )}\n          onScroll={(x) => this._scrollX.setValue(x)}\n        >\n          <Page tabLabel={{label: \"Hot\", icon: iconsSet.hot}} label=\"Page #1 Hot\" text=\"You can pass your own views to TabBar!\"/>\n          <Page tabLabel={{label: \"Trending\", icon: iconsSet.trending}} label=\"Page #2 Trending\" text=\"Yehoo!!!\"/>\n          <Page tabLabel={{label: \"Fresh\", icon: iconsSet.fresh}} label=\"Page #3 Fresh\" text=\"Hooray!\"/>\n          <Page tabLabel={{label: \"Funny\", icon: iconsSet.funny}} label=\"Page #4 Funny\"/>\n          <Page tabLabel={{label: \"Movie & TV\", icon: iconsSet.movieAndTv}} label=\"Page #5 Movie & TV\"/>\n          <Page tabLabel={{label: \"Sport\", icon: iconsSet.sport}} label=\"Page #6 Sport\"/>\n        </ScrollableTabView>\n      </View>\n    );\n  }\n}\n\n\n```\n\nNotice! In case of using this tabbar we must pass object into tabLabel property. It is necessary to set labels and badges.\n\n\n## Example\n[Example is here](https://github.com/Slowyn/UnderlineTabBarExample)\n\n## Changelog\n- **[1.3.6]**\n  + Improve recalculation of scroll values\n- [1.3.5]\n  + Improve underline rerender on tab layout updates\n  + Minor code improvments\n- [1.3.4]\n  + Improve and update `Advanced usage` example\n- [1.3.3]\n  + Improve initial setup with `initialPage` property\n  + Remove `shouldScroll` parameter due to its non-ideal work\n- [1.3.2]\n  + Update Readme\n- [1.3.1]\n  + Describe tabStyles with flow\n  + Add tab customization in documentation\n  + Update Readme\n- [1.3.0]\n  + Fix an error related to types export\n- [1.2.8]\n  + Minor fix\n- [1.2.7]\n  + Types are available for importing\n- [1.2.6]\n  + Improve offset calculations for tabs which are located in the end of TabBar\n  + Now you can pass more than 10 tabs to component\n- [1.2.5]\n  + Fix bug when `activeTabTextStyle` had lower priority than just `textStyle`\n  + Add customization for underline\n- [1.2.4]\n  + Update descriptions.\n- [1.2.3]\n  + Fixed bug when user provide less than two tabs.\n- [1.2.2]\n  + Minor changes\n- [1.2.1]\n  + Now it's possible to pass your own `renderTab` function (hooray!). It opens many opportunities for customization\n  + Type of `Tab` has been changed. Now it's a map where you can pass any data you need to use in your custom Tab view\n  + Example has been added\n- [1.2.0]\n  + Initial setup now depends on `initialPage` prop.\n  + Calculating of interpolations now doesn't apply transformations to underline. It prevents flickering when tab has styles which resize it\n  + Better manual scrolling performance of TabBar\n- [1.1.7]\n  + Possibly unnecessary transformations to underline have been removed. It improves behaviour on Android\n- [1.1.6]\n  + Change hardcoded marginValue on value from props to calculate scroll positions properly\n- [1.1.5]\n  + Prevent crashing on android devices\n- [1.1.4]\n  + Interpolation values are calculated only when all mandatory views are measured. It prevents incorrect behaviour of tabs scrolling and underline.\n  + Now you can set default colour for badges using `tabBadgeColor` prop\n  + Now you can set margins between tabs using `tabMargin` prop\n\n\n\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Konstantin Yakushin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-native-underline-tabbar/-/react-native-underline-tabbar-1.3.6.tgz#9f442c200d3935fdf28ef0da6052f991da186759",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-native-underline-tabbar/-/react-native-underline-tabbar-1.3.6.tgz",
    "hash": "9f442c200d3935fdf28ef0da6052f991da186759",
    "integrity": "sha512-4s9ydeFacPomdfrGBuCWbJzbhSs+JaJSyI2O5s0le9ocm88edenbwrk7w9NKWRN8dT4ZV9v6iq74uO3Io/Exxw==",
    "registry": "npm",
    "packageName": "react-native-underline-tabbar",
    "cacheIntegrity": "sha512-4s9ydeFacPomdfrGBuCWbJzbhSs+JaJSyI2O5s0le9ocm88edenbwrk7w9NKWRN8dT4ZV9v6iq74uO3Io/Exxw== sha1-n0QsIA05Nf3yjvDaYFL5kdoYZ1k="
  },
  "registry": "npm",
  "hash": "9f442c200d3935fdf28ef0da6052f991da186759"
}